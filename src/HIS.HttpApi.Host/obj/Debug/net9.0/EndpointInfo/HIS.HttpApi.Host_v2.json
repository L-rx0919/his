{
  "openapi": "3.0.1",
  "info": {
    "title": "业务接口",
    "version": "v2"
  },
  "paths": {
    "/api/v2/his/patientChenter/GetPatients": {
      "get": {
        "tags": [
          "PatientCenter"
        ],
        "summary": "联查",
        "parameters": [
          {
            "name": "patientName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HIS.APIResult`1[[System.Collections.Generic.List`1[[HIS.HIS.PatientCenters.PatientCenterDto, HIS.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HIS.APIResult`1[[System.Collections.Generic.List`1[[HIS.HIS.PatientCenters.PatientCenterDto, HIS.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HIS.APIResult`1[[System.Collections.Generic.List`1[[HIS.HIS.PatientCenters.PatientCenterDto, HIS.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/his/patientChenter/GetChargingModule": {
      "get": {
        "tags": [
          "PatientCenter"
        ],
        "summary": "费用账单",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HIS.APIResult`1[[System.Collections.Generic.List`1[[HIS.HIS.PatientCenters.ChargingModuleDto, HIS.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HIS.APIResult`1[[System.Collections.Generic.List`1[[HIS.HIS.PatientCenters.ChargingModuleDto, HIS.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HIS.APIResult`1[[System.Collections.Generic.List`1[[HIS.HIS.PatientCenters.ChargingModuleDto, HIS.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HIS.APIResult`1[[System.Collections.Generic.List`1[[HIS.HIS.PatientCenters.ChargingModuleDto, HIS.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/HIS.CodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HIS.HIS.PatientCenters.ChargingModuleDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HIS.APIResult`1[[System.Collections.Generic.List`1[[HIS.HIS.PatientCenters.PatientCenterDto, HIS.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/HIS.CodeEnum"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HIS.HIS.PatientCenters.PatientCenterDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HIS.CodeEnum": {
        "enum": [
          0,
          401,
          403,
          500
        ],
        "type": "integer",
        "format": "int32"
      },
      "HIS.HIS.PatientCenters.ChargingModuleDto": {
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HIS.HIS.PatientCenters.PatientCenterDto": {
        "required": [
          "patient_address",
          "patient_age",
          "patient_blood_type",
          "patient_contact",
          "patient_gender",
          "patient_name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "department_id": {
            "type": "string",
            "format": "uuid"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "specialty": {
            "type": "string",
            "nullable": true
          },
          "key_department_name": {
            "type": "string",
            "nullable": true
          },
          "key_department_location": {
            "type": "string",
            "nullable": true
          },
          "key_department_phone": {
            "type": "string",
            "nullable": true
          },
          "department_type": {
            "type": "string",
            "nullable": true
          },
          "patientid": {
            "type": "integer",
            "format": "int32"
          },
          "patient_name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "patient_gender": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "patient_age": {
            "type": "integer",
            "format": "int32"
          },
          "patient_contact": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "patient_address": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "patient_blood_type": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "emergency_contact": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "marital_status": {
            "type": "string",
            "nullable": true
          },
          "card_status": {
            "type": "string",
            "nullable": true
          },
          "card_type": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "create_date": {
            "type": "string",
            "format": "date-time"
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time"
          },
          "last_transaction_date": {
            "type": "string",
            "format": "date-time"
          },
          "card_owner_name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "associated_dept": {
            "type": "string",
            "nullable": true
          },
          "contact_phone": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.RemoteServiceErrorInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceValidationErrorInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.RemoteServiceErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorInfo"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.RemoteServiceValidationErrorInfo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "apiKey",
        "description": "JWT授权(数据将在请求头中进行传递)直接在下面框中输入Bearer {token}(注意两者之间是一个空格) \"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "PatientCenter",
      "description": "患者中心"
    }
  ]
}