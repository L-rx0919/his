<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HIS.Application</name>
    </assembly>
    <members>
        <member name="M:HIS.AuditLogs.AuditLogService.AuditLogPageAsync(HIS.PageAndQueryAndTimeRange)">
            <summary>
            日志管理
            </summary>
            <param name="pageAndQueryAndTimeRange"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.ChatHub.Send(System.String,System.String,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="user"></param>
            <param name="to"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.ChatHub.AddUsers(System.String)">
            <summary>
            添加用户
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.ChatHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            断开连接
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HISApplicationAutoMapperProfile.#ctor">
            <summary>
            映射配置
            </summary>
        </member>
        <member name="M:HIS.HIS.Chargemodules.ChargemodulesServices.AddChargemodules(HIS.HIS.Chargemodules.ChargemodulesDTO)">
             <summary>
             添加收费模块
            </summary>
        </member>
        <member name="M:HIS.HIS.Chargemodules.ChargemodulesServices.GetChargemodulesByDepartment(System.String)">
            <summary>
            收费模块表和科室表联查
            </summary>    
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Chargemodules.ChargemodulesServices.DeleteChargemodules(System.Guid)">
             <summary>
             删除收费模块
            </summary>
        </member>
        <member name="F:HIS.HIS.Clinictypedepartments.ClinictypedepartmentServices._clinic_type_departmentRepository">
            <summary>
            门诊类型与科室关联仓储
            </summary>
        </member>
        <member name="F:HIS.HIS.Clinictypedepartments.ClinictypedepartmentServices._mapper">
            <summary>
            AutoMapper
            </summary>
        </member>
        <member name="M:HIS.HIS.Clinictypedepartments.ClinictypedepartmentServices.#ctor(Volo.Abp.Domain.Repositories.IRepository{HIS.SettlementSystem.Clinic_type_department},AutoMapper.IMapper)">
            <summary>
            构造函数
            </summary>
            <param name="clinic_type_departmentRepository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:HIS.HIS.Clinictypedepartments.ClinictypedepartmentServices.AddClinicTypeDepartment(HIS.HIS.Clinic_type_departments.Clinic_type_departmentDto)">
            <summary>
            添加门诊类型与科室关联
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="F:HIS.HIS.Clinictypes.ClinictypeServices._clinicTypeRepository">
            <summary>
            门诊类型仓储
            </summary>
        </member>
        <member name="F:HIS.HIS.Clinictypes.ClinictypeServices._mapper">
            <summary>
            AutoMapper映射器
            </summary>
        </member>
        <member name="M:HIS.HIS.Clinictypes.ClinictypeServices.#ctor(Volo.Abp.Domain.Repositories.IRepository{HIS.SettlementSystem.Clinic_type},AutoMapper.IMapper)">
            <summary>
            构造函数
            </summary>
            <param name="clinicTypeRepository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:HIS.HIS.Clinictypes.ClinictypeServices.GetListAsync">
            <summary>
            查询门诊类型
            </summary>
            <returns></returns>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Clinictypes.ClinictypeServices.CreateAsync(HIS.HIS.Clinic_types.Clinic_typeDto)">
            <summary>
             添加门诊类型
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="F:HIS.HIS.Departments.DepartmentServices.DepartmentRepository">
            <summary>
            科室仓储
            </summary>
        </member>
        <member name="F:HIS.HIS.Departments.DepartmentServices.ClinicTypeRepository">
            <summary>
            门诊类型仓储
            </summary>
        </member>
        <member name="F:HIS.HIS.Departments.DepartmentServices.ClinicTypeDepartmentRepository">
            <summary>
            科室门诊类型仓储
            </summary>
        </member>
        <member name="F:HIS.HIS.Departments.DepartmentServices._mapper">
            <summary>
            AutoMapper映射器
            </summary>
        </member>
        <member name="M:HIS.HIS.Departments.DepartmentServices.#ctor(Volo.Abp.Domain.Repositories.IRepository{HIS.SettlementSystem.Department},Volo.Abp.Domain.Repositories.IRepository{HIS.SettlementSystem.Clinic_type},Volo.Abp.Domain.Repositories.IRepository{HIS.SettlementSystem.Clinic_type_department},AutoMapper.IMapper)">
            <summary>
            构造函数
            </summary>
            <param name="departmentRepository"></param>
            <param name="clinicTypeRepository"></param>
            <param name="clinicTypeDepartmentRepository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:HIS.HIS.Departments.DepartmentServices.CreateAsync(HIS.HIS.Departments.DepartmentDto)">
            <summary>
            添加科室
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Departments.DepartmentServices.GetDepartmentByIdAsync(System.Guid)">
            <summary>
            根据门诊类型ID获取科室信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Doctors.DoctorServices.AddDoctor(HIS.HIS.Doctors.DoctorDto)">
            <summary>
            添加医生
            </summary>
            <param name="patient"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Doctors.DoctorServices.GetDoctor">
            <summary>
            获取医生
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:HIS.HIS.FinancialInvoicests.FinancialInvoicesServices">
            <summary>
            财务发票服务
            </summary>
            
        </member>
        <member name="F:HIS.HIS.FinancialInvoicests.FinancialInvoicesServices.mapper">
            <summary>
            AutoMapper映射器
            </summary>
        </member>
        <member name="M:HIS.HIS.FinancialInvoicests.FinancialInvoicesServices.#ctor(Volo.Abp.Domain.Repositories.IRepository{HIS.System_Administration.FinancialInvoices},AutoMapper.IMapper)">
            <summary>
            构造函数
            </summary>
            <param name="financialInvoicesRepository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:HIS.HIS.FinancialInvoicests.FinancialInvoicesServices.CreateAsync(HIS.HIS.FinancialInvoicesServices.FinancialInvoicesDTO)">
            <summary>
            添加发票信息
            </summary>
            <param name="financial"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.FinancialInvoicests.FinancialInvoicesServices.GetListAsync(HIS.PageParamsDto,System.String)">
            <summary>
             查询分页显示
            </summary>
            <param name="paramsDto"></param>
            <param name="FinancialInvoicesinitial"></param>
            <returns></returns>
        </member>
        <member name="F:HIS.HIS.InpatientRecords.InpatientRecordServices._mapper">
            <summary>
            映射器
            </summary>
        </member>
        <member name="M:HIS.HIS.InpatientRecords.InpatientRecordServices.AddInpatientRecord(HIS.HIS.InpatientRecords.InsertInpatientRecordsDto)">
            <summary>
            添加住院记录
            </summary>
            <param name="patient"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.InpatientRecords.InpatientRecordServices.DelInpatientRecord(System.Guid)">
            <summary>
            删除住院记录
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:HIS.HIS.InpatientRecords.InpatientRecordServices.GetDepartment">
            <summary>
            查询科室
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.InpatientRecords.InpatientRecordServices.GetDoctor">
            <summary>
            查询医生
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.InpatientRecords.InpatientRecordServices.GetInpatientRecord(System.Nullable{System.Guid})">
            <summary>
            获取住院记录
            </summary>
            <param name="patient_id"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.InpatientRecords.InpatientRecordServices.GetPatient">
            <summary>
            获取患者
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:HIS.HIS.InpatientRecords.InpatientRecordServices.UpdateInpatientRecord(HIS.HIS.InpatientRecords.InpatientRecordDto)">
            <summary>
            修改住院信息
            </summary>
            <param name="patient"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="F:HIS.HIS.Insurance_Records.Insurance_RecordServices._mapper">
            <summary>
            映射器
            </summary>
        </member>
        <member name="M:HIS.HIS.Insurance_Records.Insurance_RecordServices.AddInsurance_Record(HIS.HIS.InpatientRecords.InpatientRecordDto)">
            <summary>
            添加医保记录
            </summary>
            <param name="patient"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:HIS.HIS.Insurance_Records.Insurance_RecordServices.GetInsurance_Record(System.Guid)">
            <summary>
            获取医保记录
            </summary>
            <param name="patient_id"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="F:HIS.HIS.Naturepatients.NaturepatientsServices.natureofPatientRepository">
            <summary>
            病人性质仓储
            </summary>
        </member>
        <member name="F:HIS.HIS.Naturepatients.NaturepatientsServices.mapper">
            <summary>
            AutoMapper映射器
            </summary>
        </member>
        <member name="M:HIS.HIS.Naturepatients.NaturepatientsServices.#ctor(Volo.Abp.Domain.Repositories.IRepository{HIS.System_Administration.NatureofPatient},AutoMapper.IMapper)">
            <summary>
            构造函数
            </summary>
            <param name="natureofPatientRepository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:HIS.HIS.Naturepatients.NaturepatientsServices.CreateNaturepatient(HIS.HIS.NaturepatientServices.NaturepatientDTO)">
            <summary>
             添加病人性质
            </summary>
            <param name="nature"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Naturepatients.NaturepatientsServices.GetNatyrePatiient">
            <summary>
            查询病人性质
            </summary>
            <returns>病人性质列表</returns>
        </member>
        <member name="M:HIS.HIS.Naturepatients.NaturepatientsServices.DelNaturepatient(System.Guid,System.Int32)">
            <summary>
            删除病人性质
            </summary>
        </member>
        <member name="T:HIS.HIS.PatientCenters.PatientCenterService">
            <summary>
            患者中心
            </summary>
        </member>
        <member name="M:HIS.HIS.PatientCenters.PatientCenterService.GetPatients(System.String)">
            <summary>
            联查
            </summary>
            <param name="patientName"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.PatientCenters.PatientCenterService.GetChargingModule(System.String)">
            <summary>
            费用账单
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="F:HIS.HIS.Patients.PatientServices._patientRepository">
            <summary>
             patients仓储
            </summary>
        </member>
        <member name="F:HIS.HIS.Patients.PatientServices._Patient_Card_InfoRepository">
            <summary>
            一卡通信息仓储
            </summary>
        </member>
        <member name="M:HIS.HIS.Patients.PatientServices.CreatePatient(HIS.HIS.Patients.PatientInsertDto)">
            <summary>
            添加患者
            </summary>
            <param name="patient"> 患者信息 </param>
            <returns> APIResult </returns>
        </member>
        <member name="M:HIS.HIS.Patients.PatientServices.GetPatients(System.String,System.String)">
            <summary>
            查询所有患者
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Patients.PatientServices.CreatePatientCardInfo(HIS.HIS.Patients.Patient_Card_InfoDto)">
            <summary>
            一卡通 信息 新增
            </summary>
            <param name="patient_Card_Info"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Patients.PatientServices.GetPatientNameAndId">
            <summary>
            查询所有病人名称和Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Patients.PatientServices.GetPatientCardInfos">
            <summary>
            查询患者一卡通信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Patients.PatientServices.GetDepartment">
            <summary>
            查询科室
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Patients.PatientServices.GetDoctor">
            <summary>
            查询医生
            </summary>
            <returns></returns>
        </member>
        <member name="F:HIS.HIS.Registrations.RegistrationServices._registrationRepository">
            <summary>
            挂号仓储
            </summary>
        </member>
        <member name="F:HIS.HIS.Registrations.RegistrationServices._mapper">
            <summary>
            AutoMapper映射器
            </summary>
        </member>
        <member name="M:HIS.HIS.Registrations.RegistrationServices.#ctor(Volo.Abp.Domain.Repositories.IRepository{HIS.SettlementSystem.Registration},AutoMapper.IMapper)">
            <summary>
            构造函数
            </summary>
            <param name="registrationRepository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:HIS.HIS.Registrations.RegistrationServices.CreateRegistration(HIS.HIS.RegistrationServices.RegistrationDto)">
            <summary>
            添加挂号
            </summary>
            <param name="registration"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.HIS.Registrations.RegistrationServices.GetRegistrationByDate(System.DateTime)">
            <summary>
            查寻当日挂号信息
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="F:HIS.Fee_Categories.Fee_CategoryServices._mapper">
            <summary>
             
            </summary>
        </member>
        <member name="M:HIS.Fee_Categories.Fee_CategoryServices.AddFee_Category(HIS.Fee_Categories.Fee_CategoryDto)">
            <summary>
            添加费用类别
            </summary>
            <param name="patient"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.Fee_Categories.Fee_CategoryServices.GetFee_Category">
            <summary>
            获取费用类别
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.Notice.NoticeService.QueryNoticeAsync(HIS.PageParamsDto,System.Nullable{System.Int32})">
            <summary>
            获取通知列表
            </summary>
            <param name="pageParamsDto"></param>
            <param name="IsRead"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.GetDictForCacheAsync">
            <summary>
            从缓存读取字典数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.GetAllAsync">
            <summary>
            获取字典服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.GetSysDictList(HIS.SystemDicServices.PageAndQueryParamsDto)">
            <summary>
            字典分页
            </summary>
            <param name="pageAndQueryParamsDto"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.CreateAsync(HIS.SystemDicServices.SysDictListDto)">
            <summary>
            新增字典
            </summary>
            <param name="sysDictListDto"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.GetAsync(System.Guid)">
            <summary>
            获取字典类型
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.UpdateAsync(HIS.SystemDicServices.SysDictListDto,System.Guid)">
            <summary>
            更新字典类型
            </summary>
            <param name="sysDictListDto"></param>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.DeleteAsync(System.Guid)">
            <summary>
            删除字典类型
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.GetSysDictDataList(HIS.SystemDicServices.PageAndQueryParamsDto,System.String)">
            <summary>
            字典数据分页
            </summary>
            <param name="pageAndQueryParamsDto"></param>
            <param name="dictCode"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.CreateSysDictDataAsync(HIS.SystemDicServices.SysDictDataListDto)">
            <summary>
            新增字典数据
            </summary>
            <param name="sysDictDataListDto"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.GetSysDictDataAsync(System.Guid)">
            <summary>
            获取字典数据
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.UpdateSysDictDataAsync(HIS.SystemDicServices.SysDictDataListDto,System.Guid)">
            <summary>
            更新字典数据
            </summary>
            <param name="sysDictDataListDto"></param>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.DeleteSysDictDataAsync(System.Guid)">
            <summary>
            删除字典数据
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.InitData">
            <summary>
            初始化数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemDicServices.SystemDicService.GetSysDicDataAsync(System.String)">
            <summary>
            根据字典编码获取字典数据
            </summary>
            <param name="dicCode"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemServices.SystemUserServices.#ctor(Lazy.Captcha.Core.ICaptcha,Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Configuration.IConfiguration,Volo.Abp.Domain.Repositories.IRepository{HIS.SystemUser},Volo.Abp.Domain.Repositories.IRepository{HIS.SystemDept})">
            <summary>
            构造函数
            </summary>
            <param name="captcha"></param>
            <param name="httpContextAccessor"></param>
            <param name="configuration"></param>
            <param name="repository"></param>
            <param name="repositoryUser"></param>
        </member>
        <member name="M:HIS.SystemServices.SystemUserServices.InitDataAsync">
            <summary>
            初始化数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemServices.SystemUserServices.Captcha">
            <summary>
            获取验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemServices.SystemUserServices.LoginAsync(HIS.SystemServices.LoginDto)">
            <summary>
            登录
            </summary>
            <param name="loginDto"></param>
            <returns></returns>
        </member>
        <member name="M:HIS.SystemServices.SystemUserServices.InfoAsync">
            <summary>
            获取用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:HIS.SytstemMenu.SysMenuService.Routes">
            <summary>
            获取路由
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
